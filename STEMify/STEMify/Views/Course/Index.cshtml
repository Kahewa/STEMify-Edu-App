@model IEnumerable<STEMify.Models.Course>

@{
    ViewData["Title"] = "Courses";
    var defaultImage = "https://cdn1.expresscomputer.in/wp-content/uploads/2023/09/29160907/EC_Gen_AI_09_Technology_750.jpg";

    // Function to get background class based on DifficultyLevelID
    Func<int?, string> getBackgroundClass = id => id switch
    {
        2 => "bg-info text-white",   // Blue for Difficulty 2
        3 => "bg-danger text-white",    // Red for Difficulty 3
        4 => "bg-purple text-white",    // Purple for Difficulty 4 (Custom)
        _ => "bg-light"                 // Default light background for other difficulties
    };

    // Function to return a label for the difficulty level
    Func<int?, string> getDifficultyLabel = id => id switch
    {
        2 => "Easy",   // Medium difficulty
        3 => "Hard",     // Hard difficulty
        4 => "Expert",   // Expert difficulty
        _ => ""      // Default to Easy for other difficulties
    };
}

<a href="@Url.Action("Create")" class="btn btn-primary mb-3">Add New Course</a>
<a href="@Url.Action("DifficultyLevels")" class="btn btn-success mb-3">View DifficultyLevels</a>

<h2 class="mb-4 text-success">Courses <a href="#" class="float-end text-decoration-none">View All</a></h2>

<div class="row">
    @foreach(var course in Model)
    {
        var bgClass = getBackgroundClass(course.DifficultyLevelID);
        var difficultyLabel = getDifficultyLabel(course.DifficultyLevelID);
        <div class="col-md-4 mb-4">
            <div class="card shadow-sm border-0 @bgClass">
                <!-- Course Image -->
                <a href="@Url.Action("Details", "Course", new { id = course.CourseID })" class="ratio ratio-16x9">
                    <img src="@(string.IsNullOrEmpty(course.ImageUrl) ? defaultImage : course.ImageUrl)"
                         class="img-fluid rounded-top object-fit-cover"
                         alt="Course Image"
                         data-bs-toggle="tooltip"
                         data-bs-placement="top"
                         title="@course.Description ?? " Course Description here"" />
                </a>
                <div class="card-body">
                    <!-- Difficulty Label -->
                    <span class="badge rounded-pill bg-secondary mb-2">@difficultyLabel</span>
                    <h5 class="card-title">
                        <a href="@Url.Action("Details", "Course", new { id = course.CourseID })" class="text-decoration-none text-white">
                            @course.CourseName
                        </a>
                    </h5>
                    <p class="text-muted">Category: @course.Category?.CategoryName</p>
                    <p class="text-muted small text-white">Course ID: @course.CourseID</p>
                    <a href="#" class="btn btn-light btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal"
                       data-id="@course.CourseID" data-name="@course.CourseName">Delete</a>
                </div>
            </div>
        </div>
    }
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="deleteModalContent">
            <div class="modal-header">
                <h5 class="modal-title text-danger">Delete Text</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="deleteForm" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <p>Are you sure you want to delete the text <strong id="deleteItemName"></strong>?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Modal setup
        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var levelId = button.getAttribute('data-id');
            var levelName = button.getAttribute('data-name');

            var form = deleteModal.querySelector('form');
            form.action = '/Course/DeleteCourses/' + levelId;

            var modalText = deleteModal.querySelector('.modal-body p');
            modalText.innerHTML = 'Are you sure you want to delete the text <strong>' + levelName + '</strong>?';
        });

        // Enable all tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    </script>
}
